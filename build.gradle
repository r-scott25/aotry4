buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
}



group = 'org.launchcode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.2'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.7.2'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.2'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.2'
	implementation ('mysql:mysql-connector-java:8.0.19')
	developmentOnly 'org.springframework.boot:spring-boot-devtools:2.7.2'
	testImplementation ('org.springframework.boot:spring-boot-starter-test:2.7.2') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation("org.jmockit:jmockit:1.49")
}


test {
	useJUnitPlatform()
	jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(AbstractCompile).configureEach {
	inputs.property("java.vendor") {
		System.getProperty("java.vendor")
	}
}

tasks.withType(Test).configureEach {
	inputs.property("java.vendor") {
		System.getProperty("java.vendor")
	}

}